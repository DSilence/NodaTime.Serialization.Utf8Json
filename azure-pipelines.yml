# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

jobs:
  - job: OSX
    pool:
      vmImage: 'macOS-latest'
    steps:
      - task: Bash@3
        continueOnError: true
        inputs:
          targetType: 'filePath'
          filePath: 'build.sh'
          arguments: '-configuration $(buildConfiguration) -target CiNonWin -framework netcoreapp2.1'
          failOnStderr: true
        displayName: 'Build'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '*.trx'
          searchFolder: '$(Build.SourcesDirectory)/artifacts/tests'
        displayName: 'Publish Test results'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: "cobertura"
          summaryFileLocation: "$(Build.SourcesDirectory)/artifacts/coverage/*.xml"
          failIfCoverageEmpty: true
        displayName: 'Publish Code Coverage'

  - job: Ubuntu
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Bash@3
        continueOnError: true
        inputs:
          targetType: 'filePath'
          filePath: 'build.sh'
          arguments: '-configuration $(buildConfiguration) -target CiNonWin -framework netcoreapp2.1'
          failOnStderr: true
        displayName: 'Build'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '*.trx'
          searchFolder: '$(Build.SourcesDirectory)/artifacts/tests'
        displayName: 'Publish Test results'

  - job: Windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: PowerShell@2
        continueOnError: true
        inputs:
          targetType: 'filePath'
          filePath: 'build.ps1'
          arguments: '-configuration $(buildConfiguration) -target Ci'
          failOnStderr: true
        displayName: 'Build'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '*.trx'
          searchFolder: '$(Build.SourcesDirectory)/artifacts/tests'
        displayName: 'Publish Test results'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: "cobertura"
          summaryFileLocation: "$(Build.SourcesDirectory)/artifacts/coverage/*.xml"
          failIfCoverageEmpty: true
        displayName: 'Publish Code Coverage'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.SourcesDirectory)/artifacts/nuget'
          artifactName: 'Nuget'
        displayName: 'Publish Artifacts'

trigger:
  - master
  - develop
  - release/*

variables:
  buildConfiguration: 'Release'

